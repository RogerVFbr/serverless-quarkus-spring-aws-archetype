#set ( $dollarSign = "$")
service: ${awsStackName}

provider:
  name: aws
  stage: dev
  region: us-east-1
  versionFunctions: false
  memorySize: 512
  timeout: 30
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "ssm:*"
      Resource: "*"
  environment:
    SERVICE_REGION: ${dollarSign}{self:provider.region}

custom:
  output:
    file: .serverless/outputs.json

resources:
  - ${dollarSign}{file(serverless/serverless-resources-cognito.yml)}

package:
  individually: true

functions:
  ApiJvm:
    runtime: java8
    handler: io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest
    package:
      artifact: target/${artifactId}-${version}-runner.jar
    events:
      - http:
          path: /jvm/{any+}
          method: ANY
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
            scopes:
              - Fn::Join: [ "/", [ !Ref UserPoolResourceServer,  "${dollarSign}{self:service}-${dollarSign}{self:provider.stage}.test"] ]

  ApiNative:
    runtime: provided
    handler: native.handler
    package:
      artifact: target-native/function.zip
    environment:
      DISABLE_SIGNAL_HANDLERS: true
    events:
      - http:
          path: /native/{any+}
          method: ANY
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
            scopes:
              - Fn::Join: [ "/", [ !Ref UserPoolResourceServer,  "${dollarSign}{self:service}-${dollarSign}{self:provider.stage}.test"] ]

plugins:
  - serverless-export-env
  - serverless-stack-output